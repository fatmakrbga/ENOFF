"""kt column added to kullanici

Revision ID: 002911249fb0
Revises: 
Create Date: 2024-01-07 19:42:18.174357

"""
from alembic import op
import sqlalchemy as sa
from sqlalchemy.dialects import postgresql

# revision identifiers, used by Alembic.
revision = '002911249fb0'
down_revision = None
branch_labels = None
depends_on = None


def upgrade():
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table('kullanici_cihaz',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('kullanici_id', sa.Integer(), nullable=True),
    sa.Column('cihaz_id', sa.Integer(), nullable=True),
    sa.Column('odano', sa.Integer(), nullable=True),
    sa.Column('is_active', sa.Boolean(), nullable=True),
    sa.Column('tuketim_miktari', sa.Integer(), nullable=True),
    sa.Column('addtime', sa.TIMESTAMP(), nullable=True),
    sa.ForeignKeyConstraint(['cihaz_id'], ['cihaz.id'], ),
    sa.ForeignKeyConstraint(['kullanici_id'], ['kullanici.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.drop_table('kullanicicihaz')
    op.drop_table('kullanicirol')
    op.drop_table('node_data')
    with op.batch_alter_table('birim', schema=None) as batch_op:
        batch_op.add_column(sa.Column('birim_ad', sa.String(length=255), nullable=True))
        batch_op.add_column(sa.Column('is_active', sa.Boolean(), nullable=True))
        batch_op.drop_column('birimad')
        batch_op.drop_column('isactive')

    with op.batch_alter_table('bolum', schema=None) as batch_op:
        batch_op.add_column(sa.Column('birim_id', sa.Integer(), nullable=True))
        batch_op.add_column(sa.Column('is_active', sa.Boolean(), nullable=True))
        batch_op.drop_constraint('bolum_birimid_fkey', type_='foreignkey')
        batch_op.create_foreign_key(None, 'birim', ['birim_id'], ['id'])
        batch_op.drop_column('birimid')
        batch_op.drop_column('isactive')

    with op.batch_alter_table('kullanici', schema=None) as batch_op:
        batch_op.add_column(sa.Column('kt', sa.Integer(), nullable=True))

    with op.batch_alter_table('kurum', schema=None) as batch_op:
        batch_op.add_column(sa.Column('kurum_tur_id', sa.Integer(), nullable=True))
        batch_op.drop_constraint('kurum_kurumturid_fkey', type_='foreignkey')
        batch_op.create_foreign_key(None, 'kurumtur', ['kurum_tur_id'], ['id'])
        batch_op.drop_column('kurumturid')

    with op.batch_alter_table('sensor_data', schema=None) as batch_op:
        batch_op.add_column(sa.Column('kullanici_id', sa.Integer(), nullable=True))
        batch_op.drop_constraint('sensor_data_user_id_fkey', type_='foreignkey')
        batch_op.create_foreign_key(None, 'kullanici', ['kullanici_id'], ['id'])
        batch_op.drop_column('user_id')

    with op.batch_alter_table('tuketim', schema=None) as batch_op:
        batch_op.add_column(sa.Column('kullanici_id', sa.Integer(), nullable=True))
        batch_op.add_column(sa.Column('baslangic_tarihi', sa.TIMESTAMP(), nullable=True))
        batch_op.add_column(sa.Column('bitis_tarihi', sa.TIMESTAMP(), nullable=True))
        batch_op.add_column(sa.Column('elektrik_fatura', sa.Integer(), nullable=True))
        batch_op.add_column(sa.Column('toplam_sonuc', sa.Integer(), nullable=True))
        batch_op.drop_constraint('tuketim_kullaniciid_fkey', type_='foreignkey')
        batch_op.create_foreign_key(None, 'kullanici', ['kullanici_id'], ['id'])
        batch_op.drop_column('elektrikfatura')
        batch_op.drop_column('toplamsonuc')
        batch_op.drop_column('kullaniciid')
        batch_op.drop_column('bitistarihi')
        batch_op.drop_column('baslangictarihi')

    # ### end Alembic commands ###


def downgrade():
    # ### commands auto generated by Alembic - please adjust! ###
    with op.batch_alter_table('tuketim', schema=None) as batch_op:
        batch_op.add_column(sa.Column('baslangictarihi', postgresql.TIMESTAMP(), autoincrement=False, nullable=True))
        batch_op.add_column(sa.Column('bitistarihi', postgresql.TIMESTAMP(), autoincrement=False, nullable=True))
        batch_op.add_column(sa.Column('kullaniciid', sa.INTEGER(), autoincrement=False, nullable=True))
        batch_op.add_column(sa.Column('toplamsonuc', sa.INTEGER(), autoincrement=False, nullable=True))
        batch_op.add_column(sa.Column('elektrikfatura', sa.INTEGER(), autoincrement=False, nullable=True))
        batch_op.drop_constraint(None, type_='foreignkey')
        batch_op.create_foreign_key('tuketim_kullaniciid_fkey', 'kullanici', ['kullaniciid'], ['id'])
        batch_op.drop_column('toplam_sonuc')
        batch_op.drop_column('elektrik_fatura')
        batch_op.drop_column('bitis_tarihi')
        batch_op.drop_column('baslangic_tarihi')
        batch_op.drop_column('kullanici_id')

    with op.batch_alter_table('sensor_data', schema=None) as batch_op:
        batch_op.add_column(sa.Column('user_id', sa.INTEGER(), autoincrement=False, nullable=True))
        batch_op.drop_constraint(None, type_='foreignkey')
        batch_op.create_foreign_key('sensor_data_user_id_fkey', 'kullanici', ['user_id'], ['id'])
        batch_op.drop_column('kullanici_id')

    with op.batch_alter_table('kurum', schema=None) as batch_op:
        batch_op.add_column(sa.Column('kurumturid', sa.INTEGER(), autoincrement=False, nullable=True))
        batch_op.drop_constraint(None, type_='foreignkey')
        batch_op.create_foreign_key('kurum_kurumturid_fkey', 'kurumtur', ['kurumturid'], ['id'])
        batch_op.drop_column('kurum_tur_id')

    with op.batch_alter_table('kullanici', schema=None) as batch_op:
        batch_op.drop_column('kt')

    with op.batch_alter_table('bolum', schema=None) as batch_op:
        batch_op.add_column(sa.Column('isactive', sa.BOOLEAN(), autoincrement=False, nullable=True))
        batch_op.add_column(sa.Column('birimid', sa.INTEGER(), autoincrement=False, nullable=True))
        batch_op.drop_constraint(None, type_='foreignkey')
        batch_op.create_foreign_key('bolum_birimid_fkey', 'birim', ['birimid'], ['id'])
        batch_op.drop_column('is_active')
        batch_op.drop_column('birim_id')

    with op.batch_alter_table('birim', schema=None) as batch_op:
        batch_op.add_column(sa.Column('isactive', sa.BOOLEAN(), autoincrement=False, nullable=True))
        batch_op.add_column(sa.Column('birimad', sa.VARCHAR(length=255), autoincrement=False, nullable=True))
        batch_op.drop_column('is_active')
        batch_op.drop_column('birim_ad')

    op.create_table('node_data',
    sa.Column('id', sa.INTEGER(), autoincrement=True, nullable=False),
    sa.Column('data', sa.VARCHAR(length=255), autoincrement=False, nullable=True),
    sa.Column('timestamp', postgresql.TIMESTAMP(), autoincrement=False, nullable=True),
    sa.PrimaryKeyConstraint('id', name='node_data_pkey')
    )
    op.create_table('kullanicirol',
    sa.Column('id', sa.INTEGER(), autoincrement=True, nullable=False),
    sa.Column('kullaniciid', sa.INTEGER(), autoincrement=False, nullable=True),
    sa.Column('rolid', sa.INTEGER(), autoincrement=False, nullable=True),
    sa.Column('isactive', sa.BOOLEAN(), autoincrement=False, nullable=True),
    sa.ForeignKeyConstraint(['kullaniciid'], ['kullanici.id'], name='kullanicirol_kullaniciid_fkey'),
    sa.ForeignKeyConstraint(['rolid'], ['rol.id'], name='kullanicirol_rolid_fkey'),
    sa.PrimaryKeyConstraint('id', name='kullanicirol_pkey')
    )
    op.create_table('kullanicicihaz',
    sa.Column('id', sa.INTEGER(), autoincrement=True, nullable=False),
    sa.Column('kullaniciid', sa.INTEGER(), autoincrement=False, nullable=True),
    sa.Column('cihazid', sa.INTEGER(), autoincrement=False, nullable=True),
    sa.Column('odano', sa.INTEGER(), autoincrement=False, nullable=True),
    sa.Column('isactive', sa.BOOLEAN(), autoincrement=False, nullable=True),
    sa.Column('tuketimmiktari', sa.INTEGER(), autoincrement=False, nullable=True),
    sa.Column('addtime', postgresql.TIMESTAMP(), autoincrement=False, nullable=True),
    sa.ForeignKeyConstraint(['cihazid'], ['cihaz.id'], name='kullanicicihaz_cihazid_fkey'),
    sa.ForeignKeyConstraint(['kullaniciid'], ['kullanici.id'], name='kullanicicihaz_kullaniciid_fkey'),
    sa.PrimaryKeyConstraint('id', name='kullanicicihaz_pkey')
    )
    op.drop_table('kullanici_cihaz')
    # ### end Alembic commands ###
